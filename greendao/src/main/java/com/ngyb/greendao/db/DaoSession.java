package com.ngyb.greendao.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.ngyb.greendao.bean.Father;
import com.ngyb.greendao.bean.PEClazz;
import com.ngyb.greendao.bean.Son;
import com.ngyb.greendao.bean.Student;

import com.ngyb.greendao.db.FatherDao;
import com.ngyb.greendao.db.PEClazzDao;
import com.ngyb.greendao.db.SonDao;
import com.ngyb.greendao.db.StudentDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig fatherDaoConfig;
    private final DaoConfig pEClazzDaoConfig;
    private final DaoConfig sonDaoConfig;
    private final DaoConfig studentDaoConfig;

    private final FatherDao fatherDao;
    private final PEClazzDao pEClazzDao;
    private final SonDao sonDao;
    private final StudentDao studentDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        fatherDaoConfig = daoConfigMap.get(FatherDao.class).clone();
        fatherDaoConfig.initIdentityScope(type);

        pEClazzDaoConfig = daoConfigMap.get(PEClazzDao.class).clone();
        pEClazzDaoConfig.initIdentityScope(type);

        sonDaoConfig = daoConfigMap.get(SonDao.class).clone();
        sonDaoConfig.initIdentityScope(type);

        studentDaoConfig = daoConfigMap.get(StudentDao.class).clone();
        studentDaoConfig.initIdentityScope(type);

        fatherDao = new FatherDao(fatherDaoConfig, this);
        pEClazzDao = new PEClazzDao(pEClazzDaoConfig, this);
        sonDao = new SonDao(sonDaoConfig, this);
        studentDao = new StudentDao(studentDaoConfig, this);

        registerDao(Father.class, fatherDao);
        registerDao(PEClazz.class, pEClazzDao);
        registerDao(Son.class, sonDao);
        registerDao(Student.class, studentDao);
    }
    
    public void clear() {
        fatherDaoConfig.getIdentityScope().clear();
        pEClazzDaoConfig.getIdentityScope().clear();
        sonDaoConfig.getIdentityScope().clear();
        studentDaoConfig.getIdentityScope().clear();
    }

    public FatherDao getFatherDao() {
        return fatherDao;
    }

    public PEClazzDao getPEClazzDao() {
        return pEClazzDao;
    }

    public SonDao getSonDao() {
        return sonDao;
    }

    public StudentDao getStudentDao() {
        return studentDao;
    }

}
